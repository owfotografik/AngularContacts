{"version":3,"sources":["/Users/omaste/Documents/GitHub/AngularContacts/src/$_lazy_route_resource lazy","/Users/omaste/Documents/GitHub/AngularContacts/src/app/app.component.css","/Users/omaste/Documents/GitHub/AngularContacts/src/app/app.component.html","/Users/omaste/Documents/GitHub/AngularContacts/src/app/app.component.ts","/Users/omaste/Documents/GitHub/AngularContacts/src/app/app.module.ts","/Users/omaste/Documents/GitHub/AngularContacts/src/app/contact-form/contact-form.component.css","/Users/omaste/Documents/GitHub/AngularContacts/src/app/contact-form/contact-form.component.html","/Users/omaste/Documents/GitHub/AngularContacts/src/app/contact-form/contact-form.component.ts","/Users/omaste/Documents/GitHub/AngularContacts/src/app/contact-list/contact-list.component.css","/Users/omaste/Documents/GitHub/AngularContacts/src/app/contact-list/contact-list.component.html","/Users/omaste/Documents/GitHub/AngularContacts/src/app/contact-list/contact-list.component.ts","/Users/omaste/Documents/GitHub/AngularContacts/src/app/contact/contact.component.css","/Users/omaste/Documents/GitHub/AngularContacts/src/app/contact/contact.component.html","/Users/omaste/Documents/GitHub/AngularContacts/src/app/contact/contact.component.ts","/Users/omaste/Documents/GitHub/AngularContacts/src/app/models/contact.ts","/Users/omaste/Documents/GitHub/AngularContacts/src/app/services/contacts.service.ts","/Users/omaste/Documents/GitHub/AngularContacts/src/app/services/http-contacts.service.ts","/Users/omaste/Documents/GitHub/AngularContacts/src/environments/environment.ts","/Users/omaste/Documents/GitHub/AngularContacts/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/omaste/Documents/GitHub/AngularContacts/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/omaste/Documents/GitHub/AngularContacts/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n\\n  <h1>\\n    Welcome to Omaste's Awesome {{title}}!\\n    <input name=\\\"title\\\" [(ngModel)]=\\\"title\\\">\\n  </h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-4\\\">\\n        <app-contact-list (onSelect)=\\\"setView($event)\\\" (onEdit)=\\\"setEdit($event)\\\"></app-contact-list>\\n    </div>\\n    <div class=\\\"col-xs-8\\\">\\n        <app-contact *ngIf=\\\"contact && mode=='view'\\\" [contact]=\\\"contact\\\"></app-contact>\\n        <app-contact-form *ngIf=\\\"contact && mode=='edit'\\\" [contact]=\\\"contact\\\"></app-contact-form>\\n    </div>\\n</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/omaste/Documents/GitHub/AngularContacts/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { Contact } from './models/contact';\n\n@Component({\n    selector: 'app-root',\n    providers: [],\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    \n    contact: Contact = null;\n    mode: string = 'view';\n\n    setView(contact: Contact) {\n        this.contact = contact;\n        this.mode = 'view';\n    }\n\n    setEdit(contact: Contact) {\n        this.contact = contact;\n        this.mode = 'edit';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/Documents/GitHub/AngularContacts/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport {FormsModule} from '@angular/forms'; // Import Forms Module\n\nimport{ LocalStorageContactsService } from './services/local-storage-contacts.service'; //import contacts service\nimport { HttpContactsService } from './services/http-contacts.service';\nimport { ContactsService } from './services/contacts.service';\n\nimport { AppComponent } from './app.component';\n\nimport { ContactComponent } from './contact/contact.component';\nimport { ContactFormComponent } from './contact-form/contact-form.component';\nimport { ContactListComponent } from './contact-list/contact-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactComponent,\n    ContactFormComponent,\n    ContactListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule, // using the import variable above to implement\n    HttpClientModule //use this to ask for Json data\n\n  ],\n  providers: [\n   { provide: ContactsService, useClass: HttpContactsService }\n  ], //provide the contacts service and make it use the class of HttpContactsService\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/Documents/GitHub/AngularContacts/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/omaste/Documents/GitHub/AngularContacts/src/app/contact-form/contact-form.component.css\n// module id = ../../../../../src/app/contact-form/contact-form.component.css\n// module chunks = main","module.exports = \"<div>\\n  <h2>{{contact.firstName + \\\" \\\" + contact.lastName}}</h2>\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label>First Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"contact.firstName\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Last Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"contact.lastName\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Phone</label>\\n      <input type=\\\"tel\\\" class=\\\"form-control\\\" name=\\\"phone\\\" [(ngModel)]=\\\"contact.phone\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Email</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"contact.email\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Address 1</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"addressOne\\\" [(ngModel)]=\\\"contact.address1\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Address 2</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"addressTwo\\\" [(ngModel)]=\\\"contact.address2\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>City</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"contact.city\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>State</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"state\\\" [(ngModel)]=\\\"contact.state\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Zip Code</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"zipCode\\\" maxlength=\\\"5\\\" [(ngModel)]=\\\"contact.zipCode\\\">\\n    </div>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"save()\\\">Save</button>\\n\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/omaste/Documents/GitHub/AngularContacts/src/app/contact-form/contact-form.component.html\n// module id = ../../../../../src/app/contact-form/contact-form.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Contact } from '../models/contact';\n\n@Component({\n  selector: 'app-contact-form',\n  templateUrl: './contact-form.component.html',\n  styleUrls: ['./contact-form.component.css']\n})\nexport class ContactFormComponent implements OnInit {\n  \n  @Input() contact: Contact;\n\n  constructor() { }\n\n  ngOnInit() {\n    //this.model = new Contact('brubble', 'Betty', 'Rubble');\n    //get contact from local storage\n    //let angularContacts = JSON.parse(localStorage.getItem(\"AngularContacts\"));\n    //this.contact = new Contact(angularContacts.id, angularContacts.firstName, angularContacts.lastName);\n  }\n\n  // if (data) {\n  //   this.model = JSON.parse(data);\n  // }\n  // else {\n  //   this.model = new Contact(\"\", \"\", \"\");\n  // }\n\n\n // save() {\n   // localStorage.setItem('AngularContacts', JSON.stringify(this.contact))\n  //}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/Documents/GitHub/AngularContacts/src/app/contact-form/contact-form.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/omaste/Documents/GitHub/AngularContacts/src/app/contact-list/contact-list.component.css\n// module id = ../../../../../src/app/contact-list/contact-list.component.css\n// module chunks = main","module.exports = \"\\n  <div class=\\\"row\\\" *ngFor=\\\"let contact of contacts\\\">\\n    <!--filtering the return using the *ngIf\\n      <div *ngIf=\\\"!contact.lastName.startsWith('B')\\\"> \\n  {{ contact.firstName }} <strong>{{ contact.lastName }}</strong> </div>\\n switch statement -->\\n    <!-- \\n    <div [ngSwitch]=\\\"contact.state\\\">\\n      <div *ngSwitchCase=\\\"'CA'\\\">\\n        {{contact.firstName}} is from California.\\n      </div>\\n      <div *ngSwitchCase=\\\"'FL'\\\">\\n        {{contact.firstName}} is from Florida.\\n      </div>\\n    </div>\\n  </div>\\n   -->\\n    <div class=\\\"col-xs-4\\\">\\n      <img [src]=\\\"contact.photoUrl\\\" alt=\\\"\\\">\\n    </div>\\n    <div class=\\\"col-xs-4\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-link\\\" (click)=\\\"select(contact)\\\">{{ contact.firstName }} {{ contact.lastName }}</button>&nbsp;\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"edit(contact)\\\">\\n        <i class=\\\"fa fa-pencil\\\"></i>\\n      </button>\\n    </div>\\n   \\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/omaste/Documents/GitHub/AngularContacts/src/app/contact-list/contact-list.component.html\n// module id = ../../../../../src/app/contact-list/contact-list.component.html\n// module chunks = main","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { ContactsService } from '../services/contacts.service';\nimport { HttpContactsService } from '../services/http-contacts.service';\n\nimport { Contact } from '../models/contact';\n\n@Component({\n  selector: 'app-contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.css']\n})\nexport class ContactListComponent implements OnInit {\n\n  contacts: Contact[];\n\n  @Output() onSelect = new EventEmitter<Contact>();\n  @Output() onEdit = new EventEmitter<Contact>();\n\n  constructor(private dataService: ContactsService) { }\n\n  ngOnInit() {\n\n    this.dataService.getContacts().subscribe(contacts => {\n      this.contacts = contacts;\n    });\n  }\n\n  select(contact: Contact) {\n    this.onSelect.emit(contact);\n  }\n\n  edit(contact: Contact) {\n    this.onEdit.emit(contact);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/Documents/GitHub/AngularContacts/src/app/contact-list/contact-list.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/omaste/Documents/GitHub/AngularContacts/src/app/contact/contact.component.css\n// module id = ../../../../../src/app/contact/contact.component.css\n// module chunks = main","module.exports = \"\\n\\n<div class=\\\"col-xs-4\\\">\\n {{ contact.firstName }} {{ contact.lastName }}\\n \\n\\n<div>\\n  {{contact.address1}}\\n</div>\\n\\n<div>\\n{{contact.city}} {{contact.state}} {{contact.zipCode}}\\n</div>\\n</div>\\n<div class=\\\"col-xs-4\\\">\\n{{contact.phoneNumber}}\\n<div>\\n{{contact.email}}\\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/omaste/Documents/GitHub/AngularContacts/src/app/contact/contact.component.html\n// module id = ../../../../../src/app/contact/contact.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Contact } from '../models/contact';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  @Input() contact: Contact;\n\n  constructor() { }\n\n  ngOnInit() {\n   \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/Documents/GitHub/AngularContacts/src/app/contact/contact.component.ts","export class Contact {\n   \n    photoUrl: string\n    phoneNumber: string\n    email: string\n    address1: string\n    address2: string\n    city: string\n    state: string\n    zipCode: number\n\nconstructor (\n    public id: string,\n    public firstName: string,\n    public lastName: string\n\n) {}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/Documents/GitHub/AngularContacts/src/app/models/contact.ts","import { Injectable } from '@angular/core';\nimport { Contact } from '../models/contact';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\n\n@Injectable()\nexport class ContactsService {\n\n  constructor() { }\n  \ngetContacts(): Observable<Contact[]> {\n  \n  return Observable.of([]);\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/Documents/GitHub/AngularContacts/src/app/services/contacts.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ContactsService } from './contacts.service';\nimport { Contact } from '../models/contact';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\n\n@Injectable()\nexport class HttpContactsService extends ContactsService {\n\n  contacts: Contact[];\n\n  constructor(private http: HttpClient) {\n    super();\n   \n  }\n\n  getContacts(): Observable<Contact[]> {\n    return  this.http.get<Contact[]>('https://boisecodeworks.github.io/EveningWebDev/data/AngularContacts.json');\n  \n  }\n} \n\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/Documents/GitHub/AngularContacts/src/app/services/http-contacts.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/Documents/GitHub/AngularContacts/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/Documents/GitHub/AngularContacts/src/main.ts"],"sourceRoot":"webpack:///"}